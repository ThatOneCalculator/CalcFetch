#!/bin/sh

## OS/ENVIRONMENT INFO DETECTION

kernel="$(uname -r)"
host="$(hostname)"
. /etc/os-release
os=$PRETTY_NAME
shell=${SHELL##*/}

## PACKAGE MANAGER AND PACKAGES DETECTION

manager=$(command which nix-env yum dnf rpm xbps-query apt zypper pacman apk cpm)
manager=${manager##*/}
case $manager in
    cpm) packages="$(cpm C)";;
    apt) packages="$(dpkg-query -f '${binary:Package}\n' -W | wc -l)";;
    rpm) packages="$(rpm -qa --last| wc -l)";;
    yum) packages="$(yum list installed | wc -l)";;
    dnf) packages="$(dnf list installed | wc -l)";;
    zypper) packages="$(zypper se | wc -l)";;
    pacman) packages="$(pacman -Q | wc -l)";;
    xbps-query) packages="$(xbps-query -l | wc -l)";;
    nix-env) packages="$(nix-store -q --requisites /run/current-system/sw | wc -l)";;
    apk) packages="$(apk list --installed | wc -l)";;
    *) packages="idk"
esac

## UPTIME DETECTION

IFS=. read -r s _ < /proc/uptime
d="$((s / 60 / 60 / 24))"
h="$((s / 60 / 60 % 24))"
m="$((s / 60 % 60))"
# Plurals
[ "$d" -gt 1 ] && dp=s
[ "$h" -gt 1 ] && hp=s
[ "$m" -gt 1 ] && mp=s
# Hide empty fields.
[ "$d" = 0 ] && d=
[ "$h" = 0 ] && h=
[ "$m" = 0 ] && m=
# Make the output of uptime smaller.
case $uptime_shorthand in
    tiny)
        [ "$d" ] && uptime="${d}d, "
        [ "$h" ] && uptime="$uptime${h}h, "
        [ "$m" ] && uptime="$uptime${m}m"
        uptime=${uptime%, };;
    *)
        [ "$d" ] && uptime="$d day$dp, "
        [ "$h" ] && uptime="$uptime$h hour$hp, "
        [ "$m" ] && uptime="$uptime$m min$mp"
        uptime=${uptime%, };;
esac

## RAM DETECTION

while IFS=':k '  read -r key val _; do
    case $key in
        MemTotal)
            mem_used=$((mem_used + val))
            mem_full=$val;;
        Shmem) mem_used=$((mem_used + val));;
        MemFree|Buffers|Cached|SReclaimable) mem_used=$((mem_used - val));;
    esac
done < /proc/meminfo
mem_used=$((mem_used / 1024)) 
mem_full=$((mem_full / 1024))
memstat="${mem_used}/${mem_full} MB"
# let memper=mem_used/mem_full

## DEFINE COLORS

bold=$(printf '\033[1m')
black=$(printf '\033[30m')
red=$(printf '\033[31m')
green=$(printf '\033[32m')
yellow=$(printf '\033[33m')
blue=$(printf '\033[34m')
magenta=$(printf '\033[35m')
cyan=$(printf '\033[36m')
white=$(printf '\033[37m')
reset=$(printf '\033[0m')

## USER VARIABLES -- YOU CAN CHANGE THESE

lc="${reset}${bold}${magenta}"  # labels
nc="${reset}${bold}${yellow}"   # user
hn="${reset}${bold}${blue}"     # hostname
ic="${reset}${green}"           # info
c0="${reset}${black}"           # first color
c1="${reset}${white}"           # second color
c2="${reset}${yellow}"          # third color

## OUTPUT

cat <<EOF

${c0}      ___     ${nc}${USER}${red}@${reset}${hn}${host}${reset} 
${c0}     (${c1}.. ${c0}\    ${lc}  ${ic}${os}${reset}
${c0}     (${c2}<> ${c0}|    ${lc}  ${ic}${kernel}${reset}
${c0}    /${c1}/  \\ ${c0}\\   ${lc}  ${ic}${RAM}${memstat}
${c0}   ( ${c1}|  | ${c0}/|  ${lc}  ${ic}${packages} (${manager})${reset}
${c2}  _${c0}/\\ ${c1}__)${c0}/${c2}_${c0})  ${lc}  ${ic}${uptime}${reset}
${c2}  \/${c0}-____${c2}\/${reset}   ${black}███${red}███${green}███${yellow}███${blue}███${magenta}███${cyan}███${reset}
EOF
